<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>察说花园</title>
    <description>人生就是干</description>
    <link>https://chasays.github.io/</link>
    <atom:link href="https://chasays.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 07 May 2022 14:36:21 +0000</pubDate>
    <lastBuildDate>Sat, 07 May 2022 14:36:21 +0000</lastBuildDate>
    <generator>Jekyll v3.9.2</generator>
    
      <item>
        <title>36 - 35岁，程序员在做什么</title>
        <description>&lt;p&gt;朋友，您好 ~&lt;/p&gt;

&lt;p&gt;今天下班之后，回老家了，走的比较匆忙，忘了带自己的电脑，用的是公司的电脑。 公司的电脑上好多软件没有安装，有些许的不方便~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220507213224.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果您喜欢这份Newsletter，&lt;a href=&quot;https://chasays.zhubai.love/&quot;&gt;请转发给您朋友，&lt;/a&gt;，这是对我最大的帮助，继续进步，继续给大家带来有价值的分享。&lt;/p&gt;

&lt;p&gt;我之前在互联网工作，由于互联网的性质，大家都知道，除了 996，还有比较有名气的就是「内卷」。&lt;/p&gt;

&lt;p&gt;当然也有好处，就是资本趋利，互联网的待遇，也是很少有其他行业比较的，这个就是所谓的行业势能。&lt;/p&gt;

&lt;p&gt;今年出现了一些比较特殊的情况。 互联网大厂每年都有裁员的比例，10%-20%是比较常见的，由于共同富裕话题、全球互联网行业增长都遇到了瓶颈的时候，今年大厂的裁员就更为猛烈，20%应该就是门槛，往上就不好说了。&lt;/p&gt;

&lt;p&gt;我也没有具体的数据，从我个人和身边的情况了解来看，总体来说，比往年都要严重一些。&lt;/p&gt;

&lt;h2 id=&quot;35岁&quot;&gt;35岁&lt;/h2&gt;

&lt;p&gt;一个普通的本科生毕业之后，工作到35岁，大概就是13年的职业生涯，如果是一直做程序员，13年不论做哪一个行业、哪一个岗位，都应该有一定的阅历、深度。&lt;/p&gt;

&lt;p&gt;实际上，资深确实是少数，也是紧缺货，稀有物种。 可以在招聘平台看到有些需要工作10年以上的专家等，这部分员工确实还是少见。&lt;/p&gt;

&lt;p&gt;我自己就是属于这一类，对自己的定位不太清晰，对每一个知识领域有所涉及，不深入。 这个也是我未来的对自己的要求，希望能在一个方向死磕到底，成为这个岗位有深度的人。&lt;/p&gt;

&lt;p&gt;一定是这个岗位，不是行业。 行业太泛了，不是观察员，没有必要把握整个行业，关注一个岗位即可。&lt;/p&gt;

&lt;p&gt;35岁，到底能不能失业？&lt;/p&gt;

&lt;p&gt;我想答案很明确，失不失业，取决于自己想要什么。&lt;/p&gt;

&lt;p&gt;有些互联网公司要求年轻化，有可能是为了更能加班，做一些重复性的工作吧。 遇到这种公司、这种领导，最好尽早的选择换个地方吧。&lt;/p&gt;

&lt;h2 id=&quot;真诚&quot;&gt;真诚&lt;/h2&gt;

&lt;p&gt;我听了许多的脱口秀，特别是「谐聊」这个节目，我最最大的收获，就是学会的真诚。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;谐星聊天会是由单立人喜剧出品的线上播客节目，每场邀请数十名观众与来自单立人的喜剧演员们一起，聊聊主题相关的故事与经历，用幽默开解生活中的沉杂琐事。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我来自农村，当时刚到镇里里面念书的时候，特别的自卑，怕别人瞧不起我。 越有这种心理，就越会撒谎。&lt;/p&gt;

&lt;p&gt;撒的慌多了，估计别人也不想给我争辩……&lt;/p&gt;

&lt;p&gt;慢慢的自己也意识到这个问题，撒谎并不能带给自己更多的优越感，同时也不能摆脱自己乡下人的身份。&lt;/p&gt;

&lt;p&gt;最近看一本书的时候，发现一个亮点，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;要想设计出成功的习惯并改变自身行为&lt;/code&gt;，需要做到3件事：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;停止自我批评；&lt;/li&gt;
  &lt;li&gt;把你的愿望拆解成微行为；&lt;/li&gt;
  &lt;li&gt;将每一次错误当成是一种新发现，并利用它们不断改进。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;请记住，只有在感觉良好而不是感觉糟糕时，才能达到最好的改变效果。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;这个感觉就是真诚的面对自己。&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;文章推荐&quot;&gt;文章推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arstechnica.com/gadgets/2022/05/apple-google-and-microsoft-want-bluetooth-proximity-to-replace-the-passwor&quot;&gt;密码放在云上&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;国外的就是各种合作，各占据一方，我们不仅和国外的技术差别大，连格局也大呀.&lt;/p&gt;

&lt;p&gt;苹果、谷歌和微软发起了一项联合努力，以密码替换为密码标准。密码标准允许用户通过发送到用户手机的身份验证请求登录应用程序和网站。它将使用蓝牙来验证物理距离。密码可以备份到云服务，以便轻松验证新设备和跨设备同步密码。用户可以将多台设备设置为身份验证器。&lt;/p&gt;

&lt;h1 id=&quot;工具资源推荐&quot;&gt;工具、资源推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pyscript.net/&quot;&gt;pyscript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;少花钱多办事，一个python程序员搞定前后端😂&lt;/p&gt;

&lt;p&gt;PyScript是一个框架，允许用户使用HTML的界面在浏览器中创建丰富的Python应用程序。PyScript旨在为用户提供一流的编程语言，具有一致的样式规则，更具表现力，更容易学习。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://geekplux.zhubai.love/&quot;&gt;geekplux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;商业、技术、财富、个人提升等，Always Exploring。付费订阅每两周一篇科技公司分析。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;作者今年开始写newsletter，之前维护的一个同名的博客，今年开始写，目前是#16期，已经突破了2000订阅了，我到目前#34了，都不到1k订阅, 由于可以表明大佬的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;干货十足&lt;/code&gt;，订阅起来.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;过去一周&quot;&gt;过去一周&lt;/h1&gt;

&lt;p&gt;本周的思考时刻：35岁，焦虑么？&lt;/p&gt;

&lt;p&gt;说实在的，焦虑肯定是有的，但是焦虑完了，生活还是这样，我们要去面对，少一些焦虑，多一点实际行动.&lt;/p&gt;

&lt;p&gt;下周思考：如何计划自己的行动？&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;看书最重要的就是定好&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;固定的时间&lt;/code&gt;，比如每天早起20分钟，那这个时间就可以用阅读，可以做自己喜欢事情，就可以避免日后每天纠结到底啥时候读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;福格行为模型 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经开始。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;待读的书还有：启示录(产品相关)、财富自由之路-李笑来&lt;/li&gt;
  &lt;li&gt;技术相关的书，大部分是电子书，因为可以随时的show me code。&lt;/li&gt;
  &lt;li&gt;方法、理论类的书籍，一般会停下来思考，提出问题、或者沉淀为自己的知识。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天是坚持周更分享：第 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;36/60&lt;/code&gt; 期。&lt;/p&gt;

</description>
        <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/05/07/35-old-year-for-programmer/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/05/07/35-old-year-for-programmer/</guid>
        
        <category>Newsletter</category>
        
        
      </item>
    
      <item>
        <title>汇编基础指令 </title>
        <description>&lt;h1 id=&quot;汇编&quot;&gt;汇编&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/y1tME9.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在计算机程序设计中，汇编语言，是任何一种低级语言语言中的指令和结构中的机器代码指令之间有很强的对应关系。汇编语言通常每个指令有一个语句，但是通常也支持常量、注释、汇编程序指令、象内存位置、寄存器和宏的符号标签。&lt;/p&gt;

&lt;p&gt;比如and 运算&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;             Operand1: 	0101
             Operand2: 	0011
&lt;span class=&quot;nt&quot;&gt;----------------------------&lt;/span&gt;
After AND -&amp;gt; Operand1:	0001
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;常用的指令&quot;&gt;常用的指令&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;SHL  shift left (左移)指令对目标操作数执行逻辑左移，将最低位填充为0。SHR (右移)指令对目标操作数执行逻辑右移。最高位的位置填充为零。SAL (左移位算法)与 SHL 相同。&lt;/li&gt;
  &lt;li&gt;EAX  extended 它代表通用寄存器。16位 AX 寄存器可以寻址为 AH (高字节)和 AL (低字节)。EAX 寄存器是 AX 寄存器的32位版本。代表扩展。&lt;/li&gt;
  &lt;li&gt;MOV  数据移动指令 mov 指令将其第二个操作数(即寄存器内容、内存内容或常量值)引用的数据项复制到其第一个操作数引用的位置(即寄存器或内存)。&lt;/li&gt;
  &lt;li&gt;ECX  count register BX 被称为基寄存器，因为它可以用于索引寻址。CX 称为计数寄存器，因为 ECX、 CX 寄存器在迭代操作中存储循环计数。DX 被称为数据寄存器。它也用于输入/输出操作。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;分类&quot;&gt;分类&lt;/h1&gt;

&lt;h2 id=&quot;数据传输指令&quot;&gt;数据传输指令&lt;/h2&gt;
&lt;p&gt;它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据.&lt;/p&gt;
&lt;h3 id=&quot;1-通用数据传送指令&quot;&gt;1. 通用数据传送指令.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;MOV    传送字或字节.&lt;/li&gt;
  &lt;li&gt;PUSH    把字压入堆栈.&lt;/li&gt;
  &lt;li&gt;POP    把字弹出堆栈.&lt;/li&gt;
  &lt;li&gt;BSWAP  交换32位寄存器里字节的顺序&lt;/li&gt;
  &lt;li&gt;XCHG    交换字或字节.( 至少有一个操作数为寄存器,段寄存器不可作为操作数)&lt;/li&gt;
  &lt;li&gt;XADD    先交换再累加.( 结果在第一个操作数里 )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-输入输出端口传送指令&quot;&gt;2. 输入输出端口传送指令.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;IN      I/O端口输入. ( 语法: IN 累加器, {端口号│DX} )&lt;/li&gt;
  &lt;li&gt;OUT    I/O端口输出. ( 语法: OUT {端口号│DX},累加器 )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-目的地址传送指令&quot;&gt;3. 目的地址传送指令.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;LEA    装入有效地址.例: LEA DX,string  ;把偏移地址存到DX.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;LGS    传送目标指针,把指针内容装入GS.例: LGS DI,string  ;把段地址:偏移地址存到GS:DI.&lt;/li&gt;
  &lt;li&gt;LSS    传送目标指针,把指针内容装入SS.例: LSS DI,string  ;把段地址:偏移地址存到SS:DI.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-标志传送指令&quot;&gt;4. 标志传送指令.&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;LAHF    标志寄存器传送,把标志装入AH.&lt;/li&gt;
  &lt;li&gt;POPF    标志出栈.&lt;/li&gt;
  &lt;li&gt;PUSHD  32位标志入栈.&lt;/li&gt;
  &lt;li&gt;POPD    32位标志出栈.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;算术运算指令&quot;&gt;算术运算指令&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    ADD    加法.
    ADC    带进位加法.
    SUB    减法.
    SBB    带借位减法.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;逻辑运算指令&quot;&gt;逻辑运算指令&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   AND    与运算.
    OR      或运算.
    XOR    异或运算.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;p&gt;https://www.tutorialspoint.com/assembly_programming/assembly_logical_instructions.htm&lt;/p&gt;

&lt;p&gt;https://sites.google.com/site/huibianyuyanzaixianbangzhu/emu8086bang-zhu/hui-bian-zhi-ling&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/05/04/assembly-basic-instruction/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/05/04/assembly-basic-instruction/</guid>
        
        <category>LLVM</category>
        
        
      </item>
    
      <item>
        <title>git 2 个 commit 压缩为一个 commit</title>
        <description>&lt;h1 id=&quot;问题&quot;&gt;问题&lt;/h1&gt;
&lt;p&gt;在使用 Git 作为版本控制的时候，我们可能会由于各种各样的原因提交了许多临时的 commit(git add -m “xx”, 不是追加的–amend)，而这些 commit 拼接起来才是完整的任务。那么我们为了避免太多的 commit 而造成版本控制的混乱，通常我们推荐将这些 commit 合并成一个。&lt;/p&gt;

&lt;p&gt;这个情况下用rebase就可以登场了.&lt;/p&gt;

&lt;h1 id=&quot;rebase&quot;&gt;Rebase&lt;/h1&gt;

&lt;p&gt;Rebase 是在另一个基准提交之上重新应用提交的过程。它用于将不同分支的提交，合并到一个提交中。它是 git merge 命令的一种替代方法。&lt;/p&gt;

&lt;p&gt;在 Git 中，术语 rebase 指的是将一系列提交移动或合并到一个新的基本提交的过程。rebase是非常有用，它可视化了分支工作流环境中的过程。&lt;/p&gt;

&lt;p&gt;需要注意的是，最好在合并分支之前rebase。&lt;/p&gt;

&lt;h1 id=&quot;实战&quot;&gt;实战&lt;/h1&gt;

&lt;p&gt;比如首先用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m 'xx'&lt;/code&gt;来提交三次，然后把最佳的2次合并为一次.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421125024.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到有三次提交，分别如图.&lt;/p&gt;

&lt;p&gt;现在需要把下面红色部分的，就是最近的提交的2次，合并为一条commit
&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421125107.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重点，首先执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i HEAD~2&lt;/code&gt;, 这里这个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2就是最近的2次的commit&lt;/code&gt;的意思，也可以用其他的放-i commit_id.&lt;/p&gt;

&lt;p&gt;执行后看到如下弹窗，commit前面默认是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pick&lt;/code&gt;，对应的解释在下面，可以用全称，也可以用首字母，比如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421125336.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我这里保留3的comment，把2压缩到3， 修改如下，类似 r -2 ， p -3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421125739.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很多同学这里都会报错，理论上也是会报错.的， 因为s的原理是把当前的commit融合到前一个commit，3在2后面提交的，所以会报错.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error: cannot 'squash' without a previous commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421130016.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;按照提示，执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase --edit-todo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421133940.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后再次&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase --continue&lt;/code&gt;, 修改comment即可 ，为了区分，我修改如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421134129.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后ctrl+X， 然后输入Y，可以看到已经rebase，合并为一条了.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220421134207.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最后就可以提交到对于的分支上.&lt;/p&gt;

&lt;h1 id=&quot;参考&quot;&gt;参考&lt;/h1&gt;

&lt;p&gt;https://stackoverflow.com/questions/39595034/git-cannot-squash-without-a-previous-commit-error-while-rebase&lt;/p&gt;

</description>
        <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/05/03/squash-2-commit-to-1/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/05/03/squash-2-commit-to-1/</guid>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>LLVM intrinsic 介绍</title>
        <description>&lt;h1 id=&quot;什么是-llvm-intrinsic&quot;&gt;什么是 LLVM intrinsic&lt;/h1&gt;

&lt;p&gt;LLVM 支持“intrinsic function”的概念。这些函数具有众所周知的名称和语义，并且需要遵循某些限制。总的来说，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;这些 intrinsic 代表 LLVM 语言的扩展机制&lt;/code&gt;，在添加到语言(或者位码读取器/写入器、解析器等)时不需要更改 LLVM 中的所有转换。&lt;/p&gt;

&lt;p&gt;Intrinsic函数是编译器内建的函数，由编译器提供，类似于内联函数。但与内联函数不同的是，因为Intrinsic函数是编译器提供，而编译器与硬件架构联系紧密，因此编译器知道如何利用硬件能力以最优的方式实现这些功能。&lt;/p&gt;

&lt;h2 id=&quot;命名格式&quot;&gt;命名格式&lt;/h2&gt;

&lt;p&gt;intrinsic名必须全部以“ llvm”开头前缀。这个前缀在 LLVM 中保留用于intrinsic名称; 因此，函数名称不能以这个前缀开头。intrinsic函数必须始终是外部函数: 你不能定义intrinsic函数体。intrinsic函数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;只能用于调用或调用指令&lt;/code&gt;: 获取intrinsic函数的地址是非法的。此外，由于intrinsic函数是 LLVM 语言的一部分，如果添加了intrinsic函数，则需要对其更新文档。&lt;/p&gt;

&lt;h2 id=&quot;重载&quot;&gt;重载&lt;/h2&gt;

&lt;p&gt;一些intrinsic函数可以被重载，例如，intrinsic函数表示一组在不同数据类型上执行相同操作的函数。由于 LLVM 可以表示超过800万种不同的整数类型，因此通常使用重载来允许intrinsic函数对任何整数类型进行操作。可以重载一个或多个参数类型或结果类型以接受任何整数类型。也可以将参数类型定义为与前一个参数的类型或结果类型完全匹配。这允许一个intrinsic函数接受多个参数，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;但是需要所有参数都是同一类型的，只能对一个参数或结果进行重载&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;重载 intrinsic 将把它重载的参数类型的名称编码到它的函数名中，每个参数类型的前面都有一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.点符号&lt;/code&gt;。只有那些重载的类型才会生成名称后缀。其类型与另一个类型匹配的参数则不会。例如，llvm.ctpop 函数可以获取任意宽度的整数，并返回完全相同整数宽度的整数。这导致了一系列函数，如 @llvm.ctpop.i8(i8 %val)和  i29 @llvm.ctpop.i29(i29 %val).只有一个类型(返回类型)被重载，并且只需要一个类型后缀。因为参数的类型与返回类型匹配，所以它不需要自己的名称后缀。&lt;/p&gt;

&lt;p&gt;未命名类型被编码为 s_s。依赖于其重载参数类型中的未命名类型的重载 intrinsic 将获得一个额外的 .&lt;number&gt;后缀。这允许将不同的未命名类型作为参数来区分 intrinsic。(例如: llvm.ssa.copy.p0s_s.2(%42*)), 这个数字在 LLVM 模块中被跟踪，并确保模块中的唯一名称。在将两个模块链接在一起时，仍然有可能出现名称冲突。在这种情况下，其中一个名称将通过获得一个新numver来区分。&lt;/number&gt;&lt;/p&gt;

&lt;p&gt;对于为后端codegen定义 intrinsic 的目标开发人员，不应该依赖任何仅基于整数或浮点类型之间区别的内部重载来生成代码。在这种情况下，开发人员在定义 intrinsic 时， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;推荐的方法是创建单独的整数和 浮点的 intrinsic，而不是依赖于重载&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;例如，如果 llvm.target.foo(&amp;lt;4 x i32&amp;gt;))和 llvm.target.foo(&amp;lt;4 x float&amp;gt;) 需要不同的 codegen，那么应该将它们分成不同的 intrinsic。&lt;/p&gt;

&lt;h2 id=&quot;变量参数处理&quot;&gt;变量参数处理&lt;/h2&gt;

&lt;p&gt;在 LLVM 中定义了变量参数支持，包括 va_arg 指令和三个内在函数。这些函数与 &lt;stdarg.h&gt; 头文件中定义的命名类似的宏相关。&lt;/stdarg.h&gt;&lt;/p&gt;

&lt;p&gt;所有这些函数都对使用特定于目标的值类型“ va_list”的参数进行操作。LLVM 汇编语言参考手册没有定义此类型是什么，因此无论使用何种类型，都应该准备好处理这些函数。&lt;/p&gt;

&lt;h2 id=&quot;举个例子&quot;&gt;举个例子&lt;/h2&gt;

&lt;p&gt;这个例子展示了如何使用 va_arg 指令和intrinsic 函数处理变量参数。&lt;/p&gt;

&lt;div class=&quot;language-armasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;; 定义一个test 函数，第一个i32是返回值， &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;; 后面括号里面的是操作数 i32 %X&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;; 分配一个地址空间给变量，初始化va_list&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_list&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ap2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bitcast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ap&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ap2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;; va_arg= variable_argument &lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;; 这个指令用于访问传递的参数&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;va_arg&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ap2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i32&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;; 演示如何使用 llvm.va_copy 和 llvm.va_end&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;aq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alloca&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;aq2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bitcast&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aq&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aq2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ap2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;aq2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;; 停止参数的处理&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ap2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;ret&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i32&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;tmp&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;; 声明方法，类似cpp里面的extern &lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;llvm&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;va_end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;read-more&quot;&gt;Read more&lt;/h1&gt;

&lt;p&gt;https://zhuanlan.zhihu.com/p/53659330&lt;/p&gt;

&lt;p&gt;https://docs.microsoft.com/en-us/cpp/cpp/extern-cpp?view=msvc-170&lt;/p&gt;

&lt;p&gt;https://llvm.org/docs/LangRef.html#intrinsic-functions&lt;/p&gt;

</description>
        <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/05/02/LLVM-intrinsic_introduce/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/05/02/LLVM-intrinsic_introduce/</guid>
        
        <category>LLVM</category>
        
        
      </item>
    
      <item>
        <title>Compare With Others</title>
        <description>
&lt;hr /&gt;
&lt;p&gt;layout: post
title: “35 - 和别人比较”
subtitle: ‘痛苦就是来源于此’ 
author: “叉叉敌”
header-style: text
tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;newsletter&quot;&gt;Newsletter&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;朋友，您好 ~&lt;/p&gt;

&lt;p&gt;长假开始了，你准备好了么？&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/OROSIV.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果您喜欢这份Newsletter，&lt;a href=&quot;https://chasays.zhubai.love/&quot;&gt;请转发给您朋友，&lt;/a&gt;，这是对我最大的帮助，继续进步，继续给大家带来有价值的分享。&lt;/p&gt;

&lt;p&gt;上周留了一个问题和大家一起交流，比较尴尬的是没有人回复，或者是我漏掉了……&lt;/p&gt;

&lt;p&gt;五一假期临近，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;你有什么计划需要分享的么？&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;我来分享一部美剧，没有剧透，题材属于科幻、悬疑片，我看的时候采用的是1.5~2倍速度观看，不影响体验。&lt;/p&gt;

&lt;p&gt;片源的话，国内普通用户，基本上看不到，不过好在现在互联网的发达，网上基本上都能搜到免费的资源。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/nGiGro.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我最近才发现一个多年的秘密，就是运动减肥的时候，大部分人运动一般就在20分钟左右。但是实际上前20分钟，是大量消耗我们体内的糖，后面的20-30分钟才是消耗我们的脂肪，建议减肥运动的时候，时间控制在40-50分钟是比较理想的。&lt;/p&gt;

&lt;h2 id=&quot;比较&quot;&gt;比较&lt;/h2&gt;

&lt;p&gt;人生的大部分痛苦来自比较。&lt;/p&gt;

&lt;p&gt;其实，比成功更重要的是成长。如果“成功”是与他人比较的话，那么“成长”则是与自己比较——今天的我和昨天的我、明天的我和今天的我之间的比较。&lt;/p&gt;

&lt;p&gt;后一种比较显然比前一种对个体来说意义更大，也能够带来更加踏实的幸福感。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/9dkMzTjQhcu2VT-CsgyZwA&quot;&gt;我们终会找到意义。&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;效率&quot;&gt;效率&lt;/h2&gt;

&lt;p&gt;每个人都想提高效率，可奇怪的是，那么多所谓的“专家”怎么会常常忽略一个很简单又很明显的事实：没有任何机器可以一直用100%的功率运转，人也一样。
记住，任何人都不可能100%地有效率，至少不可能总是100%地有效率。&lt;/p&gt;

&lt;p&gt;请再次拿出纸和笔，罗列一下那些尽管无趣，但实际上对你来说非常重要的事情吧！&lt;/p&gt;

&lt;p&gt;如果你是一名学生，那件事情可能是背英语单词；
如果你是一名教师，那件事情可能是给学生批改作文；
如果你是一名程序员，那件事情可能是给你的代码写详尽的注释；
如果你是一名业务经理，那件事情可能是给你那挑剔的上司写下一年度的预算…&lt;/p&gt;

&lt;p&gt;最初的时候，你可以参考“时间分割法”。比如，你需要专注于这件事情2小时，即120分钟，那你就应该把当天的任务分解成6块，每一块用20分钟去完成，再把20分钟当作专注的基本时间单位，在每个时间单位过后休息5分钟，想办法犒劳一下自己——喝杯咖啡或者牛奶。休息时间的最后1分钟，重新振作，试着恢复状态，进入下一个基本时间单位——另一个20分钟。&lt;/p&gt;

&lt;h2 id=&quot;奇怪的知识&quot;&gt;奇怪的知识&lt;/h2&gt;

&lt;p&gt;男人所谓的性能力，与其心肺功能紧密相关。&lt;/p&gt;

&lt;p&gt;如果一个男人在二十五六岁的时候不管从什么渠道得知了这一点的话，那么他就应该坚持每周至少3次有氧运动。几年之后，他就会发现，在他的朋友、同事都被工作压垮了身体、了无生活乐趣的时候，他竟然可以通过积累做到一枝独秀。&lt;/p&gt;

&lt;h1 id=&quot;文章推荐&quot;&gt;文章推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://xiongyingfei.github.io/papers/FSE21a.pdf&quot;&gt;Probabilistic Delta Debugging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这篇文章的作者是北大教授熊教授。介绍了他们创建比当前流行选择（ddmin算法）更有效的增量调试（通过尝试和错误发现错误的行为）算法的工作。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://github.com/Amocy-Wang/ProbDD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;除了paper之外，还有这里实现的工具等。&lt;/p&gt;

&lt;h1 id=&quot;工具资源推荐&quot;&gt;工具、资源推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gradio.app/&quot;&gt;gradio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/LKd4mo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gradio使得用Python为机器学习模型创建用户界面变得很容易。它可以生成可共享的链接，并获得有关模型性能的反馈。Gradio具有用于调试的内置操作和解释工具。有一个GIF演示。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;过去一周&quot;&gt;过去一周&lt;/h1&gt;

&lt;p&gt;本周的思考时刻：如何更好的输出的看书的内容信息？&lt;/p&gt;

&lt;p&gt;在空闲的时间来思考问题，比如浴室沉思等，然后带着问题去看书，把书上的信息内化为自己的知识。&lt;/p&gt;

&lt;p&gt;下周思考：放松一下~&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;看书最重要的就是定好&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;固定的时间&lt;/code&gt;，比如每天早起20分钟，那这个时间就可以用阅读，可以做自己喜欢事情，就可以避免日后每天纠结到底啥时候读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;李笑来「把时间当做朋友」 - 100%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其中我收益最多的章节就是管理、交流、以及思考。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;福格行为模型 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经开始。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;待读的书还有：启示录(产品相关)、财富自由之路-李笑来&lt;/li&gt;
  &lt;li&gt;技术相关的书，大部分是电子书，因为可以随时的show me code。&lt;/li&gt;
  &lt;li&gt;方法、理论类的书籍，一般会停下来思考，提出问题、或者沉淀为自己的知识。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天是坚持周更分享：第 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;35/60&lt;/code&gt; 期。&lt;/p&gt;

</description>
        <pubDate>Sat, 30 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/30/compare-with-others/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/30/compare-with-others/</guid>
        
        
      </item>
    
      <item>
        <title>34 - 讲故事</title>
        <description>&lt;p&gt;朋友，您好 ~&lt;/p&gt;

&lt;p&gt;今天是五一前的一个周末，由于明天要继续上班，所以只有一天的时间短暂休息下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/Ldh217.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我记得早些年的时候，五一长假四7天，后来由于春节、国庆太多假期了，调整了下，五一法定的只有一天假期了。那么实际五一只有1天的法定假期，但是要调休集中到一起休息5天喃？&lt;/p&gt;

&lt;p&gt;我想大部分人应该也知道了，就是为了促进消费，促进旅游，这不就是拉动内循环和经济么？&lt;/p&gt;

&lt;p&gt;不过疫情猖獗的情况下，还是在省内找到小地方，住上几天，也特别的惬意。&lt;/p&gt;

&lt;p&gt;亦或是学习点知识，安装好Honor of King，加班加点上个星耀，弯道超车，哈哈。&lt;/p&gt;

&lt;p&gt;如果您喜欢这份Newsletter，&lt;a href=&quot;https://chasays.zhubai.love/&quot;&gt;请转发给您朋友，&lt;/a&gt;，这是对我最大的帮助，继续进步，继续给大家带来有价值的分享。&lt;/p&gt;

&lt;h2 id=&quot;先来一个问题&quot;&gt;先来一个问题&lt;/h2&gt;

&lt;p&gt;准备了和大家互动一个问题，在下一期和大家分享下一些有趣的回复，如果不同意的话，记得回复的时候备注下哦。&lt;/p&gt;

&lt;p&gt;五一假期临近，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;你有什么计划需要分享的么？&lt;/code&gt;包括不限于&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;出游&lt;/li&gt;
  &lt;li&gt;学习一门技术&lt;/li&gt;
  &lt;li&gt;看几部电影(电影推荐)&lt;/li&gt;
  &lt;li&gt;加班&lt;/li&gt;
  &lt;li&gt;隔离？&lt;/li&gt;
  &lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;接受自己的懒惰&quot;&gt;接受自己的懒惰&lt;/h2&gt;

&lt;p&gt;我经常周末的时候，停下来偶尔会打开微信视频号，打开之前想的就是看几分钟，娱乐一下，放松一下。&lt;/p&gt;

&lt;p&gt;因为我关注了几个练习英语口语的博主，刚开始的时候给我推送的是英语相关的视频，刷着刷着就给我推荐一堆美女……&lt;/p&gt;

&lt;p&gt;这个时候过得特别快，本来计划的是刷10来分钟就来完事了，哪知道估计都是30~60分钟，才发现「我次奥」，时间过得太快了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/FvVWUT.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我自己是不爱学习的，也非常的贪玩，我想这是我的本性，我就以为大部分人都是这样的。&lt;/p&gt;

&lt;p&gt;最近看了前东家的VP蔡磊的经历，才发现每个人的追求是不一样的，人家大佬就是追求自己的人生。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/RFpp9Q.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;能成为大佬，也不是努努力就可以的，是要非常的努力。&lt;/p&gt;

&lt;h2 id=&quot;讲故事&quot;&gt;讲故事&lt;/h2&gt;

&lt;p&gt;看了一个本书，对于演讲、写作等，都可以用上这个知识点，只有讲好故事，这个故事最好是自己经历过的，这样才能流露真实情感。&lt;/p&gt;

&lt;p&gt;大概有这么积累，以下4种方式可以打动听众：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;改变他们掌握的信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;我们在他们已经掌握的信息的基础上，提供全新的数据。 这个相对来说有点难，一般如果没有很多知识和信息的摄入，那就更难写出一些有全新的信息。&lt;/p&gt;

&lt;p&gt;还有一个关键点就是这个信息不能太有专业性，我讲一个我自己专业相关的，那就很少有人感兴趣了。&lt;/p&gt;

&lt;p&gt;￼2.改变他们的知识或能力。&lt;/p&gt;

&lt;p&gt;我们把自己的新洞见分享给他们，或向他们展示颇为实用的做事方法。&lt;/p&gt;

&lt;p&gt;看了王刚美食家的视频，学会做饭了。看了吉他教学，学会了吉他等等&lt;/p&gt;

&lt;p&gt;￼3.改变他们的行为。&lt;/p&gt;

&lt;p&gt;我们说服他们去尝试新事物、使用或者购买新产品。&lt;/p&gt;

&lt;p&gt;目前KOL不就是这个意思么？&lt;/p&gt;

&lt;p&gt;￼4.改变他们的信念。&lt;/p&gt;

&lt;p&gt;我们启发他们用全新的视角去看自己和世界。这个比较难，我喜欢异性的，看了之后我更喜欢异性了，亦或其他？&lt;/p&gt;

&lt;p&gt;重点是让用户看完之后有一种「原来是这样的啊」，就达成目标了。&lt;/p&gt;

&lt;h1 id=&quot;文章推荐&quot;&gt;文章推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.nvidia.com/blog/multi-gpu-programming-with-standard-parallel-c-part-1&quot;&gt;GPU编程标准&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/uBRjVE.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在本文中，讨论了使用C++标准并行编程编写GPU应用程序所涉及的基本技术。还提供了我们在案例研究中使用的Boltzmann方法和Palabos应用程序的背景信息。最后，讨论了两种方法，可以重构源代码，使其更适合在GPU上运行。&lt;/p&gt;

&lt;h1 id=&quot;工具资源推荐&quot;&gt;工具、资源推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/replicate/cog&quot;&gt;机器学习容器&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo@master/uPic/VHduA4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cog是一种将机器学习模型打包到标准的、可用于生产的容器中的工具。它的开发目的是通过使Docker的设置更加简单，使研究人员更容易将机器学习模型交付生产。Cog使用所有最佳实践生成Docker映像，并自动设置正确的CUDA/cuDNN/PyTorch/Tensorflow/Python组合。它可以使用模型类型动态生成RESTful HTTP API。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;过去一周&quot;&gt;过去一周&lt;/h1&gt;

&lt;p&gt;本周的思考时刻： 如何快速学习一个新知识？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Am5LDAuvjbmbcqJ-J1UcPg&quot;&gt;日拱一卒。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下周思考：如何更好的输出的看书的内容信息？&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;看书最重要的就是定好&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;固定的时间&lt;/code&gt;，比如每天早起20分钟，那这个时间就可以用阅读，可以做自己喜欢事情，就可以避免日后每天纠结到底啥时候读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;李笑来「把时间当做朋友」 - 75%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看了很多人本性的东西，学会接受自己的弱点。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;福格行为模型 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经开始。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;待读的书还有：启示录(产品相关)、财富自由之路-李笑来&lt;/li&gt;
  &lt;li&gt;技术相关的书，大部分是电子书，因为可以随时的show me code。&lt;/li&gt;
  &lt;li&gt;方法、理论类的书籍，一般会停下来思考，提出问题、或者沉淀为自己的知识。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天是坚持周更分享：第 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;34/60&lt;/code&gt; 期。&lt;/p&gt;

</description>
        <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/23/how-to-talk-story/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/23/how-to-talk-story/</guid>
        
        <category>Newsletter</category>
        
        
      </item>
    
      <item>
        <title>LLVM 介绍</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220420120945.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220426105452.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220420121024.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/chasays/mdPicGo/20220420121048.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;https://llvm.org/devmtg/2019-04/slides/Tutorial-Bridgers-LLVM_IR_tutorial.pdf&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/20/LLVM-introduce/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/20/LLVM-introduce/</guid>
        
        <category>LLVM</category>
        
        
      </item>
    
      <item>
        <title>用 Github Action 构建自己的 Jekyll 博客</title>
        <description>&lt;h1 id=&quot;思路&quot;&gt;思路&lt;/h1&gt;

&lt;p&gt;对自己的提交的md文档，通过github action编译为静态文件，然后push到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;仓库。从而可以浏览自己的博客。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;创建一个仓库，比如名字为A-repo，用来管理自己的md文件&lt;/li&gt;
  &lt;li&gt;上传自己的Jekyll 网站文件，&lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;可以参考这个创建的文章&lt;/a&gt;；,如果不会的可以参考&lt;a href=&quot;https://github.com/fastai/fastpages&quot;&gt;fastpage&lt;/a&gt;来生成也非常的方便。&lt;/li&gt;
  &lt;li&gt;创建github actions来自动运行，见最下面的步骤、
    &lt;ul&gt;
      &lt;li&gt;先checkout A-repo的master分支。对于的action： actions/checkout@main&lt;/li&gt;
      &lt;li&gt;构建为Jekyll静态文件 ：action：actions/jekyll-build-pages@v1&lt;/li&gt;
      &lt;li&gt;把静态文件_site push到username.github.io仓库的master分支， s0/git-publish-subdir-action@develop&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name: GitHub Actions Build and Deploy Demo
on:
  push
&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;:
  jekyll:
    runs-on: ubuntu-latest
    steps:
    - name: Copy repository contents
      uses: actions/checkout@main
      with:
        persist-credentials: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;

    - name: Jekyll build
      uses: actions/jekyll-build-pages@v1
      with:
        &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
        destination: ./_site
        future: &lt;span class=&quot;nb&quot;&gt;false
        &lt;/span&gt;verbose: &lt;span class=&quot;nb&quot;&gt;true
        &lt;/span&gt;token: &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;

    - name: Push to xx.github.io repo
      uses: s0/git-publish-subdir-action@develop
      &lt;span class=&quot;nb&quot;&gt;env&lt;/span&gt;:
        REPO: git@github.com:&lt;span class=&quot;nv&quot;&gt;$/$.&lt;/span&gt;github.io.git
        SQUASH_HISTORY: &lt;span class=&quot;s2&quot;&gt;&quot;false&quot;&lt;/span&gt;
        BRANCH: master
        FOLDER: ./_site
        SSH_PRIVATE_KEY: &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面提到的有一个全局变量：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ACTION_DEPLOY_KEY： 这个是当前A-repo的里面设置的token&lt;/li&gt;
  &lt;li&gt;repository_owner： 这个就是当前仓库的owner&lt;/li&gt;
  &lt;li&gt;SSH_DEPLOY_KEY： 这个比较重要，就是相当于一个私钥&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于最后一个私钥特别说明下，我当时想光有一个私钥有什么用？没有公钥的哇。后来才发现，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;任何一对私钥和公钥都可以&lt;/code&gt;，公钥添加到sshkey里面，私钥配置在当前A-repo下面即可；&lt;/p&gt;

&lt;h2 id=&quot;创建github-action&quot;&gt;创建github action&lt;/h2&gt;

&lt;p&gt;关于github action的基础用法，参见文档，不要看网上的一些文档，就官方就是最好，也是最新的；我在这里拆了一个坑；之前的教程branch可以是master，但是始终运行不起来，我都快放弃了，看了官方文档后，发现后来改为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;了。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;注意触发的分支名称&lt;/li&gt;
  &lt;li&gt;注意缩进&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://docs.github.com/en/actions/quickstart&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;下面这个例子：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name: GitHub Actions Demo &lt;span class=&quot;c&quot;&gt;#名称&lt;/span&gt;
on: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;push]   &lt;span class=&quot;c&quot;&gt;# 触发条件是push&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest &lt;span class=&quot;c&quot;&gt;# 运行依赖环境&lt;/span&gt;
    steps: &lt;span class=&quot;c&quot;&gt;# 步骤&lt;/span&gt;
      - name: Check out repository code &lt;span class=&quot;c&quot;&gt;# 步骤名称&lt;/span&gt;
        uses: actions/checkout@v3  &lt;span class=&quot;c&quot;&gt;# 依赖已有的actions，可以market里面找到很多有用的&lt;/span&gt;
      - run: &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;🖥️ The workflow is now ready to test your code on the runner.&quot;&lt;/span&gt;
      - name: List files &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the repository  &lt;span class=&quot;c&quot;&gt;# 步骤名称&lt;/span&gt;
        run: | 
          &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 运行bash脚本&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/18/gihub-action-build-blog/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/18/gihub-action-build-blog/</guid>
        
        <category>github</category>
        
        
      </item>
    
      <item>
        <title>33 - 如何计划</title>
        <description>&lt;p&gt;朋友，您好 ~&lt;/p&gt;

&lt;p&gt;成都天气转凉，今天晚上只有12°，光说一个数字，估计大部分人没有什么概念，就是12°可以穿薄款羽绒服了。&lt;/p&gt;

&lt;p&gt;成都不只是一个来了就不想走的城市，还是一个天气多变的城市，如果你是外地人，来成都游玩，类似春天或者秋天，多准备几件厚衣服 ~&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/6374f516ly1h1cpfnmxw6j20jq09ut95.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果您喜欢这份Newsletter，请转发给您朋友，&lt;a href=&quot;https://chasays.zhubai.love/&quot;&gt;点这里免费订阅按钮&lt;/a&gt;，这是对我最大的帮助，继续进步，继续给大家带来有价值的分享。&lt;/p&gt;

&lt;h2 id=&quot;计划&quot;&gt;计划&lt;/h2&gt;

&lt;p&gt;估计没有人不知道计划是什么，我自己之前也是这么了解的。&lt;/p&gt;

&lt;p&gt;计划出游、计划这么花钱、计划这么看书……&lt;/p&gt;

&lt;p&gt;每一个计划都会，但是最近看了一本书，发现自己不会计划了。一般对一个计划来说就是这么去完成&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;预期结果是什么&lt;/li&gt;
  &lt;li&gt;把目标分解为多个小计划&lt;/li&gt;
  &lt;li&gt;坚持去做&lt;/li&gt;
  &lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大部分人大概也是这么开始一个计划，但是我们忽略了一个细节的地方，就是进度如何把控。&lt;/p&gt;

&lt;p&gt;建议在每天或者每周来看自己的计划，或者小计划有没有完成 ，没有完成就想办法来完成，多总结。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;例行回顾自己的计划&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;循序渐进&quot;&gt;循序渐进&lt;/h2&gt;

&lt;p&gt;不会为开始制定计划的时候，都是一年一年去制定计划，时间长了，对于这个没有把控力度，也发现没有这方面的天赋。&lt;/p&gt;

&lt;p&gt;除了时间时间维度，还有就是难易程度。&lt;/p&gt;

&lt;p&gt;最近看到李笑来，写的书，其实我们计划的时候，可以把时间先放短一点，先试着一周一周的去计划，这样不仅保证完成质量很高，而且你是个可控的范围，一般人都可以做到；第二个等我们熟悉了一周一周的计划之后，再用一个月一个季度一年两年的长期计划，循序渐进。&lt;/p&gt;

&lt;h2 id=&quot;行动&quot;&gt;行动&lt;/h2&gt;

&lt;p&gt;计划固然重要，行动更为重要。&lt;/p&gt;

&lt;p&gt;无论是学习、工作还是生活，我们面临的任务大都是重复性的。要想加快执行重复性任务的速度，只需在遇到重复性任务时先将其做完一次，然后马上总结、整理，搞清流程，再靠进一步的实践把它变成“闭着眼睛也能做好”的事。这是提高效率、减少失误的根本手段。&lt;/p&gt;

&lt;p&gt;准备充分的人，常常会有出色的表现，最终能够顺利地完成任务，而这样的经验会使他更加坚信提前准备的重要。准备不充分的人，执行任务时必然表现欠佳，但不管表现多差，他也提前做了一点准备（或者自认为做了一点准备），但这样的经验却会让他觉得准备是没什么用的，至少是没什么大用的，于是下一次他还会采取同样的行动，还会面临相同甚至更为严重的尴尬…&lt;/p&gt;

&lt;p&gt;在倾听的过程中，我们可以利用多余的脑力处理两个方向的信息：“回顾”与“预期”。所谓“回顾”，即使说复杂了听起来也很简单：说者刚刚都讲了些什么？&lt;/p&gt;

&lt;h1 id=&quot;文章推荐&quot;&gt;文章推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruanyifeng.com/blog/2022/04/weekly-issue-202.html?utm_source=bestxtools.com&quot;&gt;科技爱好者周刊（第 202 期）：三个有启发的学习方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;看似最笨的学习方法—-笔记和记忆力—-偏偏造就了最高的开发效率。和自己学习英语有点类似，有时候自己对各种方法和资料，非常的感兴趣，其实不然，英语是一门语言，是用的，不是用来看的，也不是收藏的。&lt;/p&gt;

&lt;h1 id=&quot;工具资源推荐&quot;&gt;工具、资源推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/AykutSarac/jsonvisio.com&quot;&gt;jsonvisio.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSON Visio是json数据可视化工具，可以无缝地显示在图表上的数据，而无需重组任何内容、直接粘贴或导入文件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/GenieFramework/Genie.jl&quot;&gt;Genie.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/6374f516ly1h1cpgj0kinj20k408rwen.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Genie是一个用于开发现代web应用程序的全栈web框架。它具有强大的路由器、WebSocket、模板、插件、ORM支持等功能。使用精灵制作的软件包和应用程序的示例可用。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;过去一周&quot;&gt;过去一周&lt;/h1&gt;

&lt;p&gt;本周的思考时刻： 如何更好的输出的看书的内容信息？&lt;/p&gt;

&lt;p&gt;书本上的都是信息，不是知识。只有自己内化为自己的信息，才是知识。&lt;/p&gt;

&lt;p&gt;下周思考：如何更真诚？&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;看书最重要的就是定好&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;固定的时间&lt;/code&gt;，比如睡前20分钟(之前有人推荐最好不要在早上，早上不容易集中精力)，那这个时间就可以用阅读，可以做自己喜欢事情，就可以避免日后每天纠结到底啥时候读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;李笑来「把时间当做朋友」 - 60%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;接受自己，接受懒惰的事实。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;福格行为模型 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经开始。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;待读的书还有：启示录(产品相关)、财富自由之路-李笑来&lt;/li&gt;
  &lt;li&gt;技术相关的书，大部分是电子书，因为可以随时的show me code。&lt;/li&gt;
  &lt;li&gt;方法、理论类的书籍，一般会停下来思考，提出问题、或者沉淀为自己的知识。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天是坚持周更分享：第 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;33/60&lt;/code&gt; 期。&lt;/p&gt;

</description>
        <pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/16/how-to-plan/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/16/how-to-plan/</guid>
        
        <category>Newsletter</category>
        
        
      </item>
    
      <item>
        <title>32 - 时间就是朋友</title>
        <description>&lt;p&gt;朋友，您好 ~&lt;/p&gt;

&lt;p&gt;上海确实疫情非常的严重，但是致死率官方报道的至少还是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;零&lt;/code&gt;，这个0给了我们很多信心，坚持下去一定会成功的。&lt;/p&gt;

&lt;p&gt;对于在上海的同事们来说，定闹钟抢购是家常便饭了。有个同事在隔离在酒店，每天有饭菜送上门，不用担心没有吃的问题，反而还是因祸得福。&lt;/p&gt;

&lt;p&gt;顺便祝大家有菜吃，有了菜吃，才能更好的防御疫情。&lt;/p&gt;

&lt;p&gt;加油，上海！&lt;/p&gt;

&lt;p&gt;如果您喜欢这份Newsletter，请转发给您朋友，&lt;a href=&quot;https://chasays.zhubai.love/&quot;&gt;点这里免费订阅按钮&lt;/a&gt;，这是对我最大的帮助，继续进步，继续给大家带来有价值的分享。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/09/bx1kQ7lqTh3owWB.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;玩耍&quot;&gt;玩耍&lt;/h2&gt;

&lt;p&gt;我们家小孩，我能明显感觉到他是贪玩的，同时也不是别人家口中的孩子。&lt;/p&gt;

&lt;p&gt;也和网上的段子相似，辅导作业的就能看出来，一会儿东、一会儿西。沉下心来做作业，基本上是很难作到，但是我们作为家长就可以时刻批评小孩并指出他的不对的地方。&lt;/p&gt;

&lt;p&gt;反而，我们自己上时间玩耍手机，不由自主的就是几个小时过去了……&lt;/p&gt;

&lt;p&gt;都说小孩的本质是最纯粹的，就能大概看出来我们人的本性是什么样子。&lt;/p&gt;

&lt;p&gt;贪玩。&lt;/p&gt;

&lt;p&gt;玩耍我都不知道怎么定义，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;一系列为了娱乐和享受而进行的内在驱动的活动。&lt;/code&gt;注意有个内在驱动的，就是不由自主。&lt;/p&gt;

&lt;h2 id=&quot;把时间当做朋友&quot;&gt;把时间当做朋友&lt;/h2&gt;

&lt;p&gt;这本书不是什么鸡汤，也不是什么励志成功的书籍。反而就是告诉我们学习这个是反人类的活动，没有人喜欢读书和学习，要接受这种心态和现状。&lt;/p&gt;

&lt;p&gt;作为程序员，明显能感觉到有些人擅长修复bug，有些擅长写bug。&lt;/p&gt;

&lt;p&gt;是什么原因导致的喃？我个人觉得是一个人的积累有关，擅长总结的人，在一个问题上不会出现3~4次同样的错误，但是差的程序员就会在同样的问题上出现多次失误。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;解决问题的核心思想只有一个——一切都靠积累&lt;/code&gt;。深信积累的力量，时间就是你的朋友，否则，它就是你的敌人。&lt;/p&gt;

&lt;p&gt;早一点意识到这个问题，摆脱自己的局限，需要心智的力量。&lt;/p&gt;

&lt;p&gt;出了积累，还有就是学自己感兴趣的东西，有机会就学，在自己的职业生涯，说不定有时候就会用上。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;没有什么东西可以速成，不是一蹴而就。&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;相反，但是可以用这个理论来做营销，怎么讲喃。比如英语这个学习就是不是速成的，如果营销上面就写21天就学会英语，有些人就会相信，效果反而还不错。&lt;/p&gt;

&lt;h2 id=&quot;三思而行&quot;&gt;三思而行&lt;/h2&gt;

&lt;p&gt;所谓“三思而行”在我看来就是指做任何事情之前都要考虑相关的3个方面：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;内容（What）&lt;/li&gt;
  &lt;li&gt;原因（Why）&lt;/li&gt;
  &lt;li&gt;方法（How）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为了严谨，应该是大部分事物都有这三部分，清楚了解一个任务的这些属性，对最终能否完成该任务起着决定性的作用，其中最重要的就是应该多花一点时间去“三思”，也就是how，为什么会这样。把这个事情迁移到其他环境上，有利于快速的内化这个信息。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;每个人都应该是自己的项目经理——自主、独立，是心智成熟的人必有的素质。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;文章推荐&quot;&gt;文章推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dkb.io/post/the-next-google&quot;&gt;下一代谷歌&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/09/WP1L2nGjovwMZr5.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下一个谷歌必须不仅仅是一个返回链接的输入框。新一代搜索引擎正在开发中，将搜索引擎的想法带到了新的方向。本文研究了新的搜索引擎，并展示了它们提供了什么。它谈到了Kagi、Neeva、You.com、Andi、Brave和Goggles，并解释了这些公司如何在该领域进行创新。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.uml.org.cn/jmshj/2022031544.asp&quot;&gt;关于人群画像&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/09/3Qx9l8aLgmMAsqH.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本文将介绍用户画像概述、构建用户画像、用户画像评估和使用等。&lt;/p&gt;

&lt;h1 id=&quot;工具资源推荐&quot;&gt;工具、资源推荐&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/direnv/direnv&quot;&gt;direnv&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/09/TP7ucl8iewrjNaR.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Direnv是shell的扩展，它增加了根据当前目录加载和卸载环境变量的能力。它支持所有常见外壳的钩子。&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;过去一周&quot;&gt;过去一周&lt;/h1&gt;

&lt;p&gt;本周的思考时刻： 如何快速学习一个新知识？&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/Am5LDAuvjbmbcqJ-J1UcPg&quot;&gt;日拱一卒。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下周思考：如何更好的输出的看书的内容信息？&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;看书最重要的就是定好&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;固定的时间&lt;/code&gt;，比如每天早起20分钟，那这个时间就可以用阅读，可以做自己喜欢事情，就可以避免日后每天纠结到底啥时候读。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;李笑来「把时间当做朋友」 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;接受自己，接受懒惰的事实。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;福格行为模型 - 20%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经开始。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;待读的书还有：启示录(产品相关)、财富自由之路-李笑来&lt;/li&gt;
  &lt;li&gt;技术相关的书，大部分是电子书，因为可以随时的show me code。&lt;/li&gt;
  &lt;li&gt;方法、理论类的书籍，一般会停下来思考，提出问题、或者沉淀为自己的知识。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今天是坚持周更分享：第 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;32/60&lt;/code&gt; 期。&lt;/p&gt;

</description>
        <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
        <link>https://chasays.github.io/2022/04/09/time-as-a-friend/</link>
        <guid isPermaLink="true">https://chasays.github.io/2022/04/09/time-as-a-friend/</guid>
        
        <category>Newsletter</category>
        
        
      </item>
    
  </channel>
</rss>
